<template minapp='native' xlang='wxml'>
  <view class='container'>
    <i-toast id="toast" />
    <view class="add-btn" wx:if='{{!isEdit}}' bindtap='edit'>
      <image src='../../static/images/addbook.png' mode='widthFix'></image>
      <view class='f15 text-c'>添加</view>
    </view>
    <view wx:else>
      <i-input title='书名' placeholder="填写书名《XXX》" type='text' maxlength='20' value='{{book.name}}'
        bind:change="onChangebook" />
      <view class="picker-classify">
        <label class="picker-title">选择分类</label>
        <picker bindchange="bindPickerChange" value="{{index}}" range="{{classify}}" range-key='name' class='picker'>
          <view class="picker">{{book.classifyName}}</view>
        </picker>
      </view>
      <view class="picker-classify">
        <label class="picker-title">是否读完</label>
        <i-switch value="{{book.isRead}}" bind:change="onChange"></i-switch>
      </view>
      <view class='btn-group'>
        <i-button bind:click="cancel" type='warning' i-class='btn'>取消</i-button>
        <i-button bind:click="save" type='info' i-class='btn'>保存</i-button>
      </view>
    </view>
  </view>
</template>

<script>
  const {
    $Toast
  } = require('../components/iview/base/index');
  import {
    createPage
  } from '@mpxjs/core'
  import store from '../store/index'
  createPage({
    data: {
      isEdit: false,
      index: 0,
      book: {
        name: "",
        isRead: false,
        classifyId: "",
        classifyName: "请添加分类"
      }
    },
    computed: {
      ...store.mapGetters([
        'openId',
        'classify',
      ])
    },
    methods: {
      onChangebook({
        detail
      }) {
        this.book.name = detail.detail.value;
      },
      onChange(e) {
        let detail = e.detail;
        this.book.isRead = detail.value;
      },
      save() {
        for (let val of Object.entries(this.book)) {
          if (!val[1] && val[0] != 'isRead') {
            $Toast({
              content: '请完成书籍信息填写',
              type: 'warning'
            });
            return;
          }
        }
        let book = JSON.parse(JSON.stringify(this.book))
        book.openId = this.openId;
        let db = wx.cloud.database()
        let myBooks = db.collection('myBooks');
        myBooks.add({
          data: book,
          success: (res) => {
            $Toast({
              content: '添加成功',
              type: 'success',
              duration: 1,
              mask: false
            });
            setTimeout(() => {
              wx.navigateBack({
                delta: 1
              })
            }, 1000);
          }
        })
      },
      edit() {
        this.isEdit = true;
      },
      cancel() {
        this.isEdit = false;
        this.book = {
          name: "",
          isRead: false,
          classifyId: "",
          classifyName: "请添加分类"
        }
      },
      bindPickerChange(e) {
        this.index = e.detail.value;
        this.book.classifyId = this.classify[this.index].id;
        this.book.classifyName = this.classify[this.index].name;
      }
    }
  })

</script>

<style lang='scss' scoped>
  .container {
    padding-bottom: 88rpx;
  }

  .add-btn {
    border: 10rpx solid #1296db;
    border-radius: 10rpx;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 0;
    padding: 30rpx 30rpx 20rpx;
    color: #1296db;
    cursor: pointer;

    image {
      width: 100rpx;
    }
  }

  .btn-group {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    margin: 0;
  }

  button.btn {
    display: inline-block;
    width: 50%;
    margin: 0;
    border-radius: 0;
  }


  .picker-classify {
    position: relative;
    display: flex;
    background: #fff;
    align-items: center;
    line-height: 1.4;
    font-size: 28rpx;
    overflow: hidden;
    padding: 14rpx 30rpx;
    color: #495060;

    .picker-title {
      min-width: 130rpx;
      padding-right: 20rpx;
    }

    .picker {
      flex: 1;
      line-height: 1.6;
      padding: 8rpx 0;
      min-height: 44rpx;
      height: auto;
    }
  }

</style>
<script type='application/json' lang='json'>
  {
    "navigationBarTitleText": "添加书籍",
    "usingComponents": {
      "i-modal": "../components/iview/modal",
      "i-toast": "../components/iview/toast",
      "i-input": "../components/iview/input",
      "i-switch": "../components/iview/switch"
    }
  }

</script>
