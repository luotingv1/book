<template minapp='native' xlang='wxml'>
  <view class='container'>
    <view class='nick alignCenter mt-10'>
      <i-avatar src="{{book.avatarUrl}}" size="large"></i-avatar>
      <label class='f14 ml-10'>{{book.nickName}}</label>
    </view>
    <view class='shudan'>
      <view class='shudan-title'>{{book.title}}#{{book.sex}}</view>
      <view class='shudan-content f14 mt-10'>{{book.content}}</view>
    </view>
    <i-row i-class="card-box">
      <i-col span="4" i-class="text-c mt-20">
        <i-avatar src="{{book.avatarUrl}}" size="small"></i-avatar>
      </i-col>
      <i-col span="20">
        <view class='book-content mt-10 f13'>本书单由{{book.nickName}}整理</view>
        <view class="f10" style="color:#80848f">{{book.collect_num}}人已收藏</view>
        <i-button bind:click="operates(book._id,book.iscollect,'collect')" type="ghost" shape="circle" size='small'
          inline i-class='btn red'>{{book.iscollect?'已收藏':'收藏'}}</i-button>
        <i-button bind:click="recommend(book._openId)" type="ghost" shape="circle" size='small' inline i-class='btn'>
          查看TA的推荐
        </i-button>
      </i-col>
    </i-row>
    <i-row wx:for='{{book.books}}' wx:key='{{index}}' i-class='bookItem'>
      <i-col span='8' i-class="text-c alignCenter">
        <image src='../../static/images/book.png' class='book'></image>
      </i-col>
      <i-col span='16'>
        <view class=' bookList'>
          <view class='f14'>{{item.name}}</view>
          <view class="f12" style="color:#80848f">分类：{{item.classifyName}}</view>
        </view>
      </i-col>
    </i-row>
    <view class='bottomBar'>
      <view class='bottom-btn'>
        <i-button bind:click="operates(book._id,book.islike,'like')" type="ghost" shape="circle" size='small' inline
          i-class='btn red'>
          <i-icon type="like_fill" color='#ed3f14' wx:if="{{book.islike}}" size="24" />
          <i-icon type="like" color='#ed3f14' wx:else size="24" />
        </i-button>
        赞赏
      </view>
      <view class='bottom-btn'>
        <i-button open-type="share" type="ghost" shape="circle" size='small' inline i-class='btn'>
          <i-icon type="share_fill" size="24" />
        </i-button>
        分享
      </view>
    </view>
  </view>
</template>

<script>
  import mpx, {
    createPage
  } from '@mpxjs/core'
  import store from '../store/index'
  createPage({
    data: {
      _lastTime: 0,
      list: {}
    },
    async onLoad({id}) {
      let db=wx.cloud.database()
      let detail=await db.collection('bookLists').doc(id).get();
       this.list = detail.data;
    },
    computed: {
       ...store.mapGetters([
        'openId',
        'isAccredit'
      ]),
      book() {
        let detail = JSON.parse(JSON.stringify(this.list));
        if (detail.like && detail.like.length > 0) {
          for (let p of detail.like) {
            if (p.openId == this.openId) {
              detail.islike = p.type;
              break;
            }
          }
        }
        if (detail.collect && detail.collect.length > 0) {
          for (let p of detail.collect) {
            if (p.openId == this.openId) {
              detail.iscollect = p.type;
              break;
            }
          }
        }
        return detail;
      }
    },
    methods: {
      recommend(id) {
        wx.navigateTo({
          url: `/pages/recommend?id=${id}`
        })
      },
      operates(id,type, name) {
        if (!this.isAccredit) {
          wx.switchTab({
            url: '/pages/publish'
          })
          return;
        }
        let _nowTime = new Date().getTime()
        if (_nowTime - this._lastTime > 1000 || !this._lastTime) {
          wx.cloud.callFunction({
              name: 'operates',
              data: {
                type: type==1?0:1,
                id,
                name
              }
            })
            .then(({
              result
            }) => {
              console.log(result);
              this.list = result.data;
            })
          this._lastTime = _nowTime;
        }
      }
    },
    onShareAppMessage() {
      return {
        path: `/pages/bookDetail?id=${this.book._id}`
      }
    }
  })

</script>

<style lang='scss' scoped>
  .nick {
    padding: 0 30rpx;
  }

  .shudan {
    padding: 0 36rpx;
    margin-top: 30rpx;

    .shudan-title {
      color: #ed3f14;
      font-size: 38rpx;
    }

    .shudan-content {
      color: #555;
      line-height: 1.7em;
    }
  }

  .card-box {
    border: 1px solid #efefef;
    border-radius: 30rpx;
    margin: 50rpx 40rpx;
    box-shadow: 0 8rpx 16rpx -8rpx rgba(0, 0, 0, 0.4);

    .btn {
      line-height: 60rpx;
      height: 60rpx;
      margin-right: 0;

      &.red {
        color: #ed3f14 !important;
      }
    }
  }

  .book {
    width: 150rpx;
    height: 140rpx;
  }

  .bookList {
    display: flex;
    flex-direction: column;
    justify-content: center;
    height: 140rpx;
  }

  .bookItem {
    padding-bottom: 20rpx;
    margin: 0 30rpx;
    border-bottom: 2rpx solid #e9eaec;
  }

  .bottomBar {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    border: 2rpx solid #e9eaec;
    padding-left: 30rpx;

    .bottom-btn {
      display: inline-flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      padding: 10rpx;

      .btn {
        margin: 0;

        &.red {
          color: #ed3f14 !important;
        }
      }
    }
  }

</style>
<script type='application/json' lang='json'>
  {
    "navigationBarTitleText": "",
    "usingComponents": {
      "i-avatar": "../components/iview/avatar",
      "i-row": "../components/iview/row",
      "i-col": "../components/iview/col",
      "i-icon": "../components/iview/icon"
    }
  }

</script>
