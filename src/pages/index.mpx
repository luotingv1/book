<template>
  <view>
    <view class='tabs'>
      <view class='tabs-box'>
        <view class="tab {{active==1?'active':''}}" bindtap='toggle(1)'>男频</view>
        <view class="tab {{active==2?'active':''}}" bindtap='toggle(2)'>女频</view>
      </view>
    </view>
    <view class="index" wx:if='{{!showEmptyTip}}'>
      <view class='mb-10' wx:for='{{newList}}' wx:key='{{item._id}}' bindtap='goToDetail(item._id)'>
        <i-card title="{{item.title}}" thumb="cloud://booklist-1hrsi.626f-booklist-1hrsi/book.jpg">
          <view slot="content">
            {{item.content}}</view>
          <view slot="footer" class='flex'>
            <label>
              <i-icon type="like" catchtap="operates(item._id,1,'like')" size="18" wx:if="{{!item.islike}}" />
              <i-icon type="like_fill" catchtap="operates(item._id,0,'like')" size="18" color='#ed3f14' wx:else />
              {{item.like_num||0}}
            </label>
            <label>
              <i-icon type="collection" catchtap="operates(item._id,1,'collect')" wx:if="{{!item.iscollect}}"
                size="18" />
              <i-icon type="collection_fill" catchtap="operates(item._id,0,'collect')" size="18" wx:else
                color='#ff9900' />
              {{item.collect_num||0}}</label>
            <label>
              <button open-type="share" id='{{item._id}}' catchtap='share' hover-class="none" class='share-btn'>
                <i-icon type="share_fill" size="18" /></button>
            </label>
          </view>
        </i-card>
      </view>
      <i-load-more tip="暂无更多数据" wx:if='{{isLastPage}}' loading="{{ false }}" />
    </view>
    <view wx:else class='empty-wrap'>
      <image src='../../static/images/img-tip-empty.png' class='image-tip'></image>
      <view class='tip-text'>暂无分享书单,快去发布吧</view>
    </view>
    <i-load-more wx:if='{{!canSearch}}' />
  </view>
</template>

<script>
  import {
    createPage
  } from '@mpxjs/core'
  import store from '../store/index'
  createPage({
    data: {
      currentPage: 1, //当前页码
      isLastPage: false,
      list: [],
      db: {},
      _lastTime: 0,
      showEmptyTip: false,
      active: 1,
      canSearch: true
    },
    computed: {
      ...store.mapGetters([
        'openId',
        'isAccredit'
      ]),
      newList() {
        let newList = [];
        newList = this.list.map((val) => {
          if (val.like && val.like.length > 0) {
            for (let p of val.like) {
              if (p.openId == this.openId) {
                val.islike = p.type;
                break;
              }
            }
          }
          if (val.collect && val.collect.length > 0) {
            for (let p of val.collect) {
              if (p.openId == this.openId) {
                val.iscollect = p.type;
                break;
              }
            }
          }
          return val
        })
        return newList
      }
    },
    onReachBottom() {
      if (this.isLastPage) {
        return
      };
      this.currentPage++;
      this._doSearch()
    },
    async onLoad() {
      this.db = wx.cloud.database();
      this._doSearch();
    },
    methods: {
      share() {
        return;
      },
      goToDetail(id) {
        wx.navigateTo({
          url: `/pages/bookDetail?id=${id}`
        })
      },
      operates(id, type, name) {
        if (!this.isAccredit) {
          wx.navigateTo({
            url: `/pages/login`
          })
          return;
        }
        let _nowTime = new Date().getTime()
        if (_nowTime - this._lastTime > 1000 || !this._lastTime) {
          wx.cloud.callFunction({
              name: 'operates',
              data: {
                type,
                id,
                name
              }
            })
            .then(({
              result
            }) => {
              let data = result.data;
              this.list = this.list.map((val) => {
                if (val._id == id) {
                  val = data;
                }
                return val
              })
            })
          this._lastTime = _nowTime;
        }
      },
      toggle(val) {
        this.active = val;
        this.list = [];
        this.currentPage = 1;
        this.showEmptyTip = false;
        this.isLastPage = false;
        this.canSearch = true;
        this._doSearch();
      },
      _doSearch() {
        if (!this.canSearch) return;
        this.canSearch = false;
        let data_search = {
          "dbName": 'bookLists',
          "filter": {
            "sex": this.active == 1 ? '男频' : '女频'
          },
          "pageIndex": this.currentPage,
          "perPage": 5
        }
        wx.cloud.callFunction({
            name: 'pagination',
            data: data_search
          })
          .then(({
            result
          }) => {
            let data = result.data;
            if (this.currentPage == 1 && !data.length) {
              // 显示列表为空
              this.showEmptyTip = true;
              this.canSearch = true;
            } else {
              this.canSearch = true;
              this.isLastPage = !result.hasMore;
              this.list = [...this.list, ...data];
            }
          })
      }
    },
    onShareAppMessage: (res) => {
      return {
        path: `/pages/bookDetail?id=${res.target.id}`
      }
    }
  })

</script>

<style lang="scss" scoped>
  .index {
    padding-top: 100rpx;
  }

  .tabs {
    position: fixed;
    top: 0;
    width: 100%;
    height: 90rpx;
    text-align: center;
    background: #fff;
    z-index: 1;

    .tabs-box {
      margin-top: 26rpx;
      display: inline-block;
      border: 1rpx solid #5cadff;
      overflow: hidden;
      font-size: 0;
      border-radius: 5rpx;
    }

    .tab {
      display: inline-block;
      width: 120rpx;
      text-align: center;
      font-size: 26rpx;

      &.active {
        background: #5cadff;
        color: #fff;
      }

      &:first-child {
        border-right: 1rpx solid #5cadff;
      }
    }

  }

  .share-btn {
    padding: 0;
    border: none;
    border-color: transparent;
    line-height: 0;
    background: transparent;
    color: #80848f;
  }

  .flex {
    display: flex;
    justify-content: space-between;
  }

</style>

<script type="application/json">
  {
    "navigationBarTitleText": "书友圈",
    "usingComponents": {
      "i-card": "../components/iview/card",
      "i-load-more": "../components/iview/load-more",
      "i-avatar": "../components/iview/avatar",
      "i-icon": "../components/iview/icon"
    }
  }

</script>
