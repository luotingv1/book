<template minapp='native' xlang='wxml'>
  <view class='container'>
    <i-toast id="toast" />
    <view class='nick alignCenter mt-10'>
      <i-avatar src="{{userInfo.avatarUrl}}" size="default"></i-avatar>
      <label class='f14 ml-10'>{{userInfo.nickName}}</label>
    </view>
    <i-panel hide-border='{{true}}'>
      <i-input placeholder="填写书单名称" type='text' maxlength='20' value="{{shudan.title}}"
        bind:change="changeVal('title',$event)" />
      <i-input value="{{shudan.content}}" type="textarea" placeholder="填写书单介绍(最多不超过200字)" maxlength="200"
        bind:change="changeVal('content',$event)" i-class='textarea' />
    </i-panel>
    <view class="alignCenter addbook">
      <i-button bind:click="addbooks" type="ghost" shape="circle" size='small' inline>添加书籍</i-button>
      <i-radio-group current="{{shudan.sex}}" bindchange="handleChange">
        <i-radio value="男频" i-class='radio'></i-radio>
        <i-radio value="女频" i-class='radio'></i-radio>
      </i-radio-group>
    </view>
    <i-cell title="{{item.name}}" value='{{item.classifyName}}' wx:key='{{item.classifyId}}' wx:for='{{shudan.books}}'>
    </i-cell>
    <i-button bind:click="save" type='info' i-class='btn' long="true">保存书单</i-button>
    <i-modal visible="{{ visible }}" bind:ok="add" bind:cancel="handleClose">
      <i-input title='书名' placeholder="填写书名《XXX》" type='text' maxlength='20' bind:change="changebookname"
        value='{{book.name}}' />
      <view class="picker-classify">
        <label class="picker-title">选择分类</label>
        <picker bindchange="bindPickerChange" value="{{index}}" range="{{classify}}" range-key='name' class='picker'>
          <view class="picker">{{book.classifyName}}</view>
        </picker>
      </view>
    </i-modal>
  </view>
</template>

<script>
  const {
    $Toast
  } = require('../components/iview/base/index');
  import mpx, {
    createPage
  } from '@mpxjs/core'
  import store from '../store/index'
  createPage({
    data: {
      userInfo: {},
      visible: false,
      shudan: {
        title: "",
        content: "",
        sex: '男频',
        books: []
      },
      index: 0,
      book: {
        name: "",
        classifyId: "",
        classifyName: "请添加分类"
      }
    },
    onLoad() {
      // 所在页面显示之后就会执行一次
      mpx.getUserInfo().then((res) => {
        this.userInfo = res.userInfo
      })
    },
    computed: {
      ...store.mapGetters([
        'openId',
        'classify',
      ])
    },
    methods: {
      save() {
        for (let val of Object.values(this.shudan)) {
          if (val.length == 0) {
            $Toast({
              content: '请完成书单填写',
              type: 'warning'
            });
            return;
          }
        }
        //保存到数据库
         let shudan = JSON.parse(JSON.stringify(this.shudan))
        shudan.openId = this.openId;
        shudan.avatarUrl=this.userInfo.avatarUrl;
        let db = wx.cloud.database()
        let bookLists = db.collection('bookLists');
        bookLists.add({
          data: shudan,
          success: (res) => {
            $Toast({
              content: '添加成功',
              type: 'success',
              duration: 1,
              mask: false
            });
            setTimeout(() => {
              wx.navigateBack({
                delta: 1
              })
            }, 1000);
          }
        })
      },
      bindPickerChange(e) {
        this.index = e.detail.value;
        this.book.classifyId = this.classify[this.index].id;
        this.book.classifyName = this.classify[this.index].name;
      },
      changeVal(value, e) {
        this.shudan[value] = e.detail.detail.value;
      },
      changebookname(e) {
        this.book.name = e.detail.detail.value;
      },
      addbooks() {
        this.visible = true;
        this.book.name = '';
        this.book.classifyId = '';
        this.book.classifyName = "请添加分类";
        this.index = 0;
      },
      add() {
        if (this.book.name || this.book.classifyId) {
          this.shudan.books.push(this.book);
          this.visible = false;
        }
      },
      handleClose() {
        this.visible = false;
      },
      handleChange({
        detail = {}
      }) {
        this.shudan.sex = detail.value;
      },
    }
  })

</script>

<style lang='scss' scoped>
  .container {
    padding-bottom: 88rpx;
  }

  .nick {
    padding: 0 30rpx;
  }

  .avatar {
    display: inline-block;
    width: 100rpx;
    height: 100rpx;
    border-radius: 50%;
    border: 1px solid #ccc;
  }

  .textarea textarea {
    min-height: 200rpx;
  }

  button.btn {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    margin: 0;
  }

  .radio {
    display: inline-block;
  }

  .addbook {
    justify-content: space-between;
  }

  .picker-classify {
    position: relative;
    display: flex;
    background: #fff;
    align-items: center;
    line-height: 1.4;
    font-size: 28rpx;
    overflow: hidden;
    padding: 14rpx 30rpx;
    color: #495060;

    .picker-title {
      min-width: 130rpx;
      padding-right: 20rpx;
    }

    .picker {
      flex: 1;
      line-height: 1.6;
      padding: 8rpx 0;
      min-height: 44rpx;
      height: auto;
    }
  }

</style>
<script type='application/json' lang='json'>
  {
    "navigationBarTitleText": "创建书单",
    "usingComponents": {
      "i-avatar": "../components/iview/avatar",
      "i-input": "../components/iview/input",
      "i-panel": "../components/iview/panel",
      "i-radio-group": "../components/iview/radio-group",
      "i-radio": "../components/iview/radio",
      "i-modal": "../components/iview/modal",
      "i-cell": "../components/iview/cell",
      "i-toast": "../components/iview/toast"
    }
  }

</script>
